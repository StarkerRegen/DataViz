(function (React$1, ReactDOM, d3) {
  'use strict';

  var React$1__default = 'default' in React$1 ? React$1['default'] : React$1;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const OuterCircle = ({radius, strokeWidth}) => (
    React.createElement( 'circle', {
      r: radius, fill: "yellow", stroke: "black", 'stroke-width': strokeWidth })
  );

  const Eyes = ({eyeOffsetX, eyeOffsetY, eyeRadius}) => (
    React.createElement( React.Fragment, null,
      React.createElement( 'circle', {
        cx: - eyeOffsetX, cy: - eyeOffsetY, r: eyeRadius, fill: "black" }),
      React.createElement( 'circle', {
        cx: + eyeOffsetX, cy: - eyeOffsetY, r: eyeRadius, fill: "black" })
    )
  );

  const Mouth = ({mouthRadius, mouthWidth}) => {
    const mouthArc = d3.arc()
      .innerRadius(mouthRadius)
      .outerRadius(mouthRadius + mouthWidth)
      .startAngle(Math.PI / 2)
      .endAngle(Math.PI * 3 / 2);
    
    return React.createElement( 'path', { d: mouthArc() })
  };

  const FaceContainer = ({children, width, height, centerX, centerY}) => {
    const initialMousePosition = {
      x: width,
      y: height,
    };
    const [mousePosition, setMousePosition] = React$1.useState(
      initialMousePosition
    );
    const handleMouseMove = React$1.useCallback(event => {
      const { clientX, clientY } = event;
      setMousePosition({ x: clientX, y: clientY });
    }, []);

    return (
      React.createElement( 'svg', { width: width, height: height, onMouseMove: handleMouseMove },
        React.createElement( 'g', { transform: `translate(${centerX},${centerY})` },
          children
        ),
        React.createElement( 'circle', {
            cx: mousePosition.x / 6, cy: mousePosition.y / 3, r: 5 })
      ));
  };

  const Face = ({
    width,
    height,
    centerX,
    centerY,
    strokeWidth,
    eyeOffsetX,
    eyeOffsetY,
    eyeRadius,
    mouthWidth,
    mouthRadius,
    circleX,
    circleY
  }) => (
    React.createElement( FaceContainer, {
      width: width, height: height, centerX: centerX, centerY: centerX },
      React.createElement( OuterCircle, { 
        radius: centerY - strokeWidth / 2, strokeWidth: strokeWidth }),
      React.createElement( Eyes, { 
        eyeOffsetX: eyeOffsetX, eyeOffsetY: eyeOffsetY, eyeRadius: eyeRadius }),
      React.createElement( Mouth, { 
        mouthRadius: mouthRadius, mouthWidth: mouthWidth })
  	)
  );

  const width = 160;
  const height = 160;

  const array = d3.range(20);

  const App = () => {
    return array.map(() => (
    	React$1__default.createElement( Face, {
        width: width, height: height, centerX: width / 2, centerY: height / 2, strokeWidth: 7, eyeOffsetX: 30, eyeOffsetY: 30, eyeRadius: 10 + Math.random() * 8, mouthWidth: 10 + Math.random() * 10, mouthRadius: 20 + Math.random() * 20 })
    ));
  };

  const rootElement = document.getElementById('root');
  ReactDOM.render(React$1__default.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIk91dGVyQ2lyY2xlLmpzIiwiRXllcy5qcyIsIk1vdXRoLmpzIiwiRmFjZUNvbnRhaW5lci5qcyIsIkZhY2UuanMiLCJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBPdXRlckNpcmNsZSA9ICh7cmFkaXVzLCBzdHJva2VXaWR0aH0pID0+IChcbiAgPGNpcmNsZVxuICAgIHI9e3JhZGl1c31cbiAgICBmaWxsPVwieWVsbG93XCJcbiAgICBzdHJva2U9XCJibGFja1wiXG4gICAgc3Ryb2tlLXdpZHRoPXtzdHJva2VXaWR0aH1cbiAgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IE91dGVyQ2lyY2xlOyIsImNvbnN0IEV5ZXMgPSAoe2V5ZU9mZnNldFgsIGV5ZU9mZnNldFksIGV5ZVJhZGl1c30pID0+IChcbiAgPD5cbiAgICA8Y2lyY2xlXG4gICAgICBjeD17LSBleWVPZmZzZXRYfVxuICAgICAgY3k9ey0gZXllT2Zmc2V0WX1cbiAgICAgIHI9e2V5ZVJhZGl1c31cbiAgICAgIGZpbGw9XCJibGFja1wiXG4gICAgLz5cbiAgICA8Y2lyY2xlXG4gICAgICBjeD17KyBleWVPZmZzZXRYfVxuICAgICAgY3k9ey0gZXllT2Zmc2V0WX1cbiAgICAgIHI9e2V5ZVJhZGl1c31cbiAgICAgIGZpbGw9XCJibGFja1wiXG4gICAgLz5cbiAgPC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBFeWVzOyIsImltcG9ydCB7IGFyYyB9IGZyb20gJ2QzJztcblxuY29uc3QgTW91dGggPSAoe21vdXRoUmFkaXVzLCBtb3V0aFdpZHRofSkgPT4ge1xuICBjb25zdCBtb3V0aEFyYyA9IGFyYygpXG4gICAgLmlubmVyUmFkaXVzKG1vdXRoUmFkaXVzKVxuICAgIC5vdXRlclJhZGl1cyhtb3V0aFJhZGl1cyArIG1vdXRoV2lkdGgpXG4gICAgLnN0YXJ0QW5nbGUoTWF0aC5QSSAvIDIpXG4gICAgLmVuZEFuZ2xlKE1hdGguUEkgKiAzIC8gMik7XG4gIFxuICByZXR1cm4gPHBhdGggZD17bW91dGhBcmMoKX0gLz5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1vdXRoOyIsImltcG9ydCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuXG5jb25zdCBGYWNlQ29udGFpbmVyID0gKHtjaGlsZHJlbiwgd2lkdGgsIGhlaWdodCwgY2VudGVyWCwgY2VudGVyWX0pID0+IHtcbiAgY29uc3QgaW5pdGlhbE1vdXNlUG9zaXRpb24gPSB7XG4gICAgeDogd2lkdGgsXG4gICAgeTogaGVpZ2h0LFxuICB9O1xuICBjb25zdCBbbW91c2VQb3NpdGlvbiwgc2V0TW91c2VQb3NpdGlvbl0gPSB1c2VTdGF0ZShcbiAgICBpbml0aWFsTW91c2VQb3NpdGlvblxuICApO1xuICBjb25zdCBoYW5kbGVNb3VzZU1vdmUgPSB1c2VDYWxsYmFjayhldmVudCA9PiB7XG4gICAgY29uc3QgeyBjbGllbnRYLCBjbGllbnRZIH0gPSBldmVudDtcbiAgICBzZXRNb3VzZVBvc2l0aW9uKHsgeDogY2xpZW50WCwgeTogY2xpZW50WSB9KTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPHN2ZyB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSBvbk1vdXNlTW92ZT17aGFuZGxlTW91c2VNb3ZlfT5cbiAgICAgIDxnIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke2NlbnRlclh9LCR7Y2VudGVyWX0pYH0+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZz5cbiAgICAgIDxjaXJjbGVcbiAgICAgICAgICBjeD17bW91c2VQb3NpdGlvbi54IC8gNn1cbiAgICAgICAgICBjeT17bW91c2VQb3NpdGlvbi55IC8gM31cbiAgICAgICAgICByPXs1fVxuICAgICAgICAvPlxuICAgIDwvc3ZnPik7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGYWNlQ29udGFpbmVyOyIsImltcG9ydCBPdXRlckNpcmNsZSBmcm9tICcuL091dGVyQ2lyY2xlJ1xuaW1wb3J0IEV5ZXMgZnJvbSAnLi9FeWVzJ1xuaW1wb3J0IE1vdXRoIGZyb20gJy4vTW91dGgnXG5pbXBvcnQgRmFjZUNvbnRhaW5lciBmcm9tICcuL0ZhY2VDb250YWluZXInXG5cbmNvbnN0IEZhY2UgPSAoe1xuICB3aWR0aCxcbiAgaGVpZ2h0LFxuICBjZW50ZXJYLFxuICBjZW50ZXJZLFxuICBzdHJva2VXaWR0aCxcbiAgZXllT2Zmc2V0WCxcbiAgZXllT2Zmc2V0WSxcbiAgZXllUmFkaXVzLFxuICBtb3V0aFdpZHRoLFxuICBtb3V0aFJhZGl1cyxcbiAgY2lyY2xlWCxcbiAgY2lyY2xlWVxufSkgPT4gKFxuICA8RmFjZUNvbnRhaW5lclxuICAgIHdpZHRoPXt3aWR0aH0gXG4gICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgY2VudGVyWD17Y2VudGVyWH1cbiAgICBjZW50ZXJZPXtjZW50ZXJYfT5cbiAgICA8T3V0ZXJDaXJjbGUgXG4gICAgICByYWRpdXM9e2NlbnRlclkgLSBzdHJva2VXaWR0aCAvIDJ9IFxuICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgIC8+XG4gICAgPEV5ZXMgXG4gICAgICBleWVPZmZzZXRYPXtleWVPZmZzZXRYfSBcbiAgICAgIGV5ZU9mZnNldFk9e2V5ZU9mZnNldFl9IFxuICAgICAgZXllUmFkaXVzPXtleWVSYWRpdXN9IFxuICAgIC8+XG4gICAgPE1vdXRoIFxuICAgICAgbW91dGhSYWRpdXM9e21vdXRoUmFkaXVzfSBcbiAgICAgIG1vdXRoV2lkdGg9e21vdXRoV2lkdGh9XG4gICAgLz5cblx0PC9GYWNlQ29udGFpbmVyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgRmFjZTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyByYW5nZSB9IGZyb20gJ2QzJztcbmltcG9ydCBGYWNlIGZyb20gJy4vRmFjZSc7XG5cbmNvbnN0IHdpZHRoID0gMTYwO1xuY29uc3QgaGVpZ2h0ID0gMTYwO1xuXG5jb25zdCBhcnJheSA9IHJhbmdlKDE4KTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuICByZXR1cm4gYXJyYXkubWFwKCgpID0+IChcbiAgXHQ8RmFjZVxuICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICBjZW50ZXJYPXt3aWR0aCAvIDJ9XG4gICAgICBjZW50ZXJZPXtoZWlnaHQgLyAyfVxuICAgICAgc3Ryb2tlV2lkdGg9ezd9XG4gICAgICBleWVPZmZzZXRYPXszMH1cbiAgICAgIGV5ZU9mZnNldFk9ezMwfVxuICAgICAgZXllUmFkaXVzPXsxMCArIE1hdGgucmFuZG9tKCkgKiA4fVxuICAgICAgbW91dGhXaWR0aD17MTAgKyBNYXRoLnJhbmRvbSgpICogMTB9XG4gICAgICBtb3V0aFJhZGl1cz17MjAgKyBNYXRoLnJhbmRvbSgpICogMjB9XG4gICAgLz5cbiAgKSk7XG59O1xuXG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpO1xuIl0sIm5hbWVzIjpbImFyYyIsInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJyYW5nZSIsIlJlYWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7RUFBQSxNQUFNLFdBQVcsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQztFQUMxQyxFQUFFO0VBQ0YsSUFBSSxHQUFHLE1BQU8sRUFDVixNQUFLLFFBQVEsRUFDYixRQUFPLE9BQU8sRUFDZCxnQkFBYyxhQUFZLENBQzFCO0VBQ0osQ0FBQzs7RUNQRCxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUM7RUFDakQsRUFBRTtFQUNGLElBQUk7RUFDSixNQUFNLElBQUksRUFBRSxVQUFXLEVBQ2pCLElBQUksRUFBRSxVQUFXLEVBQ2pCLEdBQUcsU0FBVSxFQUNiLE1BQUssU0FBTztFQUVsQixJQUFJO0VBQ0osTUFB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